// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Web Edition"

// DATE "04/17/2019 15:13:48"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (SystemVerilog) only
// 

`timescale 1 ps/ 1 ps

module ULA_1bit (
	ALUcontrol,
	A,
	B,
	cin,
	addSubSignal,
	less,
	set,
	ALUresult,
	cout);
input 	logic [2:0] ALUcontrol ;
input 	logic A ;
input 	logic B ;
input 	logic cin ;
input 	logic addSubSignal ;
input 	logic less ;
output 	logic set ;
output 	logic ALUresult ;
output 	logic cout ;

// Design Ports Information
// set	=>  Location: PIN_A6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUresult	=>  Location: PIN_B6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cout	=>  Location: PIN_C6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_D11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cin	=>  Location: PIN_N9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// addSubSignal	=>  Location: PIN_B10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUcontrol[1]	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUcontrol[0]	=>  Location: PIN_K12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// less	=>  Location: PIN_A8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUcontrol[2]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ULA_1bit_6_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \less~input_o ;
wire \set~output_o ;
wire \ALUresult~output_o ;
wire \cout~output_o ;
wire \B~input_o ;
wire \cin~input_o ;
wire \A~input_o ;
wire \addSubSignal~input_o ;
wire \somadorULA|u2|output_s0~0_combout ;
wire \ALUcontrol[0]~input_o ;
wire \ALUcontrol[2]~input_o ;
wire \muxULA|muxZero|muxDois|out~1_combout ;
wire \muxULA|muxZero|muxDois|out~0_combout ;
wire \ALUcontrol[1]~input_o ;
wire \muxULA|muxZero|muxDois|out~2_combout ;
wire \muxULA|muxZero|muxDois|out~3_combout ;
wire \somadorULA|u3~0_combout ;


// Location: IOIBUF_X12_Y31_N8
cycloneiv_io_ibuf \less~input (
	.i(less),
	.ibar(gnd),
	.o(\less~input_o ));
// synopsys translate_off
defparam \less~input .bus_hold = "false";
defparam \less~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOOBUF_X10_Y31_N2
cycloneiv_io_obuf \set~output (
	.i(\somadorULA|u2|output_s0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\set~output_o ),
	.obar());
// synopsys translate_off
defparam \set~output .bus_hold = "false";
defparam \set~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y31_N9
cycloneiv_io_obuf \ALUresult~output (
	.i(\muxULA|muxZero|muxDois|out~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ALUresult~output_o ),
	.obar());
// synopsys translate_off
defparam \ALUresult~output .bus_hold = "false";
defparam \ALUresult~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y31_N2
cycloneiv_io_obuf \cout~output (
	.i(\somadorULA|u3~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N1
cycloneiv_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X20_Y0_N1
cycloneiv_io_ibuf \cin~input (
	.i(cin),
	.ibar(gnd),
	.o(\cin~input_o ));
// synopsys translate_off
defparam \cin~input .bus_hold = "false";
defparam \cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X33_Y28_N1
cycloneiv_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X24_Y31_N8
cycloneiv_io_ibuf \addSubSignal~input (
	.i(addSubSignal),
	.ibar(gnd),
	.o(\addSubSignal~input_o ));
// synopsys translate_off
defparam \addSubSignal~input .bus_hold = "false";
defparam \addSubSignal~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X15_Y29_N24
cycloneiv_lcell_comb \somadorULA|u2|output_s0~0 (
// Equation(s):
// \somadorULA|u2|output_s0~0_combout  = \B~input_o  $ (\cin~input_o  $ (\A~input_o  $ (\addSubSignal~input_o )))

	.dataa(\B~input_o ),
	.datab(\cin~input_o ),
	.datac(\A~input_o ),
	.datad(\addSubSignal~input_o ),
	.cin(gnd),
	.combout(\somadorULA|u2|output_s0~0_combout ),
	.cout());
// synopsys translate_off
defparam \somadorULA|u2|output_s0~0 .lut_mask = 16'h6996;
defparam \somadorULA|u2|output_s0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X33_Y11_N8
cycloneiv_io_ibuf \ALUcontrol[0]~input (
	.i(ALUcontrol[0]),
	.ibar(gnd),
	.o(\ALUcontrol[0]~input_o ));
// synopsys translate_off
defparam \ALUcontrol[0]~input .bus_hold = "false";
defparam \ALUcontrol[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N8
cycloneiv_io_ibuf \ALUcontrol[2]~input (
	.i(ALUcontrol[2]),
	.ibar(gnd),
	.o(\ALUcontrol[2]~input_o ));
// synopsys translate_off
defparam \ALUcontrol[2]~input .bus_hold = "false";
defparam \ALUcontrol[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X15_Y29_N12
cycloneiv_lcell_comb \muxULA|muxZero|muxDois|out~1 (
// Equation(s):
// \muxULA|muxZero|muxDois|out~1_combout  = (\B~input_o  & ((\A~input_o  & ((!\ALUcontrol[2]~input_o ))) # (!\A~input_o  & ((\ALUcontrol[0]~input_o ) # (\ALUcontrol[2]~input_o ))))) # (!\B~input_o  & ((\A~input_o  & ((\ALUcontrol[0]~input_o ) # 
// (\ALUcontrol[2]~input_o ))) # (!\A~input_o  & (\ALUcontrol[0]~input_o  & \ALUcontrol[2]~input_o ))))

	.dataa(\B~input_o ),
	.datab(\A~input_o ),
	.datac(\ALUcontrol[0]~input_o ),
	.datad(\ALUcontrol[2]~input_o ),
	.cin(gnd),
	.combout(\muxULA|muxZero|muxDois|out~1_combout ),
	.cout());
// synopsys translate_off
defparam \muxULA|muxZero|muxDois|out~1 .lut_mask = 16'h76E8;
defparam \muxULA|muxZero|muxDois|out~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X15_Y29_N2
cycloneiv_lcell_comb \muxULA|muxZero|muxDois|out~0 (
// Equation(s):
// \muxULA|muxZero|muxDois|out~0_combout  = (\ALUcontrol[0]~input_o  & (\less~input_o )) # (!\ALUcontrol[0]~input_o  & ((\somadorULA|u2|output_s0~0_combout )))

	.dataa(\less~input_o ),
	.datab(\somadorULA|u2|output_s0~0_combout ),
	.datac(\ALUcontrol[0]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\muxULA|muxZero|muxDois|out~0_combout ),
	.cout());
// synopsys translate_off
defparam \muxULA|muxZero|muxDois|out~0 .lut_mask = 16'hACAC;
defparam \muxULA|muxZero|muxDois|out~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N8
cycloneiv_io_ibuf \ALUcontrol[1]~input (
	.i(ALUcontrol[1]),
	.ibar(gnd),
	.o(\ALUcontrol[1]~input_o ));
// synopsys translate_off
defparam \ALUcontrol[1]~input .bus_hold = "false";
defparam \ALUcontrol[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X15_Y29_N6
cycloneiv_lcell_comb \muxULA|muxZero|muxDois|out~2 (
// Equation(s):
// \muxULA|muxZero|muxDois|out~2_combout  = (\ALUcontrol[0]~input_o  & !\ALUcontrol[2]~input_o )

	.dataa(gnd),
	.datab(\ALUcontrol[0]~input_o ),
	.datac(\ALUcontrol[2]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\muxULA|muxZero|muxDois|out~2_combout ),
	.cout());
// synopsys translate_off
defparam \muxULA|muxZero|muxDois|out~2 .lut_mask = 16'h0C0C;
defparam \muxULA|muxZero|muxDois|out~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X15_Y29_N8
cycloneiv_lcell_comb \muxULA|muxZero|muxDois|out~3 (
// Equation(s):
// \muxULA|muxZero|muxDois|out~3_combout  = (\ALUcontrol[1]~input_o  & ((\muxULA|muxZero|muxDois|out~2_combout  & (!\muxULA|muxZero|muxDois|out~1_combout )) # (!\muxULA|muxZero|muxDois|out~2_combout  & ((\muxULA|muxZero|muxDois|out~0_combout ))))) # 
// (!\ALUcontrol[1]~input_o  & (\muxULA|muxZero|muxDois|out~1_combout ))

	.dataa(\muxULA|muxZero|muxDois|out~1_combout ),
	.datab(\muxULA|muxZero|muxDois|out~0_combout ),
	.datac(\ALUcontrol[1]~input_o ),
	.datad(\muxULA|muxZero|muxDois|out~2_combout ),
	.cin(gnd),
	.combout(\muxULA|muxZero|muxDois|out~3_combout ),
	.cout());
// synopsys translate_off
defparam \muxULA|muxZero|muxDois|out~3 .lut_mask = 16'h5ACA;
defparam \muxULA|muxZero|muxDois|out~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X15_Y29_N10
cycloneiv_lcell_comb \somadorULA|u3~0 (
// Equation(s):
// \somadorULA|u3~0_combout  = (\cin~input_o  & ((\A~input_o ) # (\B~input_o  $ (\addSubSignal~input_o )))) # (!\cin~input_o  & (\A~input_o  & (\B~input_o  $ (\addSubSignal~input_o ))))

	.dataa(\B~input_o ),
	.datab(\cin~input_o ),
	.datac(\A~input_o ),
	.datad(\addSubSignal~input_o ),
	.cin(gnd),
	.combout(\somadorULA|u3~0_combout ),
	.cout());
// synopsys translate_off
defparam \somadorULA|u3~0 .lut_mask = 16'hD4E8;
defparam \somadorULA|u3~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign set = \set~output_o ;

assign ALUresult = \ALUresult~output_o ;

assign cout = \cout~output_o ;

endmodule
